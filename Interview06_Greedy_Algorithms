## Interview Preparation Kit
## Greedy Algorithms



## Minimum Absolute Difference in an Array
#!/bin/python3
import math
import os
import random
import re
import sys

# Complete the minimumAbsoluteDifference function below.
def minimumAbsoluteDifference(arr):
    arr = sorted(arr)
    min_values = []
    for i in range(len(arr)-1):
        diff = arr[i+1] - arr[i]
        min_values.append(diff)
    return min(min_values)

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    n = int(input())
    arr = list(map(int, input().rstrip().split()))
    result = minimumAbsoluteDifference(arr)
    fptr.write(str(result) + '\n')
    fptr.close()



## Luck Balance
#!/bin/python3
import math
import os
import random
import re
import sys

# Complete the luckBalance function below.
# Option 1
def luckBalance(k, contests):
    contests.sort(reverse=True)
    luck = 0
    for contest in contests:
        if contest[1] == 0:
            luck += contest[0]
        elif k > 0:
            luck += contest[0]
            k -= 1
        else:
            luck -= contest[0]
    return luck

# Option 2
def luckBalance(k, contests):
    contests.sort(reverse=True)
    luck = 0
    for pts, imp in contests:
        if k > 0 or not imp:
            luck += pts
            k -= imp
        else:
            luck -= pts
    return luck

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    nk = input().split()
    n = int(nk[0])
    k = int(nk[1])
    contests = []
    for _ in range(n):
        contests.append(list(map(int, input().rstrip().split())))
    result = luckBalance(k, contests)
    fptr.write(str(result) + '\n')
    fptr.close()















## end ##
