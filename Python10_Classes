## Python
## Classes


## Classes: Dealing with Complex Numbers
import math

class Complex(object):
    def __init__(self, real, imaginary):
        self.real = real
        self.imaginary = imaginary

    def __add__(self, no):
        x = self.real + no.real
        y = self.imaginary + no.imaginary
        return Complex(x,y)

    def __sub__(self, no):
        x = self.real - no.real
        y = self.imaginary - no.imaginary
        return Complex(x,y)
    
    def __mul__(self, no):
        x = self.real*no.real - self.imaginary*no.imaginary
        y = self.imaginary*no.real + self.real*no.imaginary
        return Complex(x,y)

    def __truediv__(self, no):
        conjugate = Complex(no.real,(-no.imaginary))
        num = self*conjugate
        denom = no*conjugate
        try:                     
            return(Complex((num.real/denom.real),(num.imaginary/denom.real)))
        except Exception as e:
            print(e)  

    def mod(self):
        return(Complex(math.sqrt(self.real**2+self.imaginary**2),0))

    def __str__(self):
        if self.imaginary == 0:
            result = "%.2f+0.00i" % (self.real)
        elif self.real == 0:
            if self.imaginary >= 0:
                result = "0.00+%.2fi" % (self.imaginary)
            else:
                result = "0.00-%.2fi" % (abs(self.imaginary))
        elif self.imaginary > 0:
            result = "%.2f+%.2fi" % (self.real, self.imaginary)
        else:
            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))
        return result

if __name__ == '__main__':
    c = map(float, input().split())
    d = map(float, input().split())
    x = Complex(*c)
    y = Complex(*d)
    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\n')





## end ##
