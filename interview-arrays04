# Minimum Swaps 2

import math
import os
import random
import re
import sys

# Complete the minimumSwaps function below.
def minimumSwaps(arr): 
    # subtract 1 from each element in the array to match # Python's zero-indexing 
    arr = [i-1 for i in arr]
    # store the positions of each element in the array
    # e.g. for arr = [1,2,0,3], positions = [2,0,1,3]
    positions = [0] * len(arr)
    for count,i in enumerate(arr):
        positions[i] = count

    swaps = 0
    for count,i in enumerate(arr):
        #if ordered, then i == count; if not, we have to swap
        if i != count:
            #find the position of the element that should be here
            pos = positions[count] 
            #swap the current element arr[count] with the correct element arr[pos]
            arr[pos],arr[count] = arr[count],arr[pos] 
            #update positions to match array after swapping
            current_value = arr[count]
            correct_value = arr[pos] 
            positions[current_value],positions[correct_value] = positions[correct_value],positions[current_value]
            swaps += 1 

    return swaps

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    arr = list(map(int, input().rstrip().split()))

    res = minimumSwaps(arr)

    fptr.write(str(res) + '\n')

    fptr.close()
